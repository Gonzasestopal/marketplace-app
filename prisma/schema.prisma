// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgres"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id            Int             @id @default(autoincrement()) @map("user_id")
  email         String          @unique
  name          String?
  usersProducts UsersProducts[]
  avatar        Avatar[]
  externalId    String          @unique @map("external_id")
  Product       Product[]

  @@index([externalId])
  @@map("users")
}

model Product {
  id           Int             @id @default(autoincrement()) @map("product_id")
  name         String
  price        Int
  description  String?
  userId       Int?            @map("user_id")
  user         User?           @relation(fields: [userId], references: [id])
  userProducts UsersProducts[]
  photos       Photo[]

  @@index([userId])
  @@map("products")
}

model Photo {
  id          Int     @id @default(autoincrement()) @map("photo_id")
  url         String
  description String
  productId   Int     @map("product_id")
  product     Product @relation(fields: [productId], references: [id])

  @@map("photos")
}

model Avatar {
  id          Int    @id @default(autoincrement()) @map("avatar_id")
  url         String
  description String
  userId      Int    @map("user_id")
  user        User   @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("avatars")
}

model UsersProducts {
  id        Int     @id @default(autoincrement()) @map("users_products_id")
  user      User    @relation(fields: [userId], references: [id])
  userId    Int     @map("user_id")
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @map("product_id")

  @@index([productId])
  @@map("users_products")
}
